# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Setup Ruby
        uses: ruby/setup-ruby@359bebbc29cbe6c87da6bc9ea3bc930432750108
        with:
          ruby-version: 2.7
      - name: Build and run test
        run: |
          sudo apt-get -yqq install libpq-dev
          gem install bundler:1.17.3
          gem install brakeman
          gem install bundler-audit
          RAILS_ENV=test 
          bundle install --without production --jobs 4 --retry 3
          bundle exec rails db:create RAILS_ENV=test
          bundle exec rails db:migrate RAILS_ENV=test
          bundle exec rails test RAILS_ENV=test
          bundle exec rake RAILS_ENV=test
          brakeman -f sonar -o brakeman-sast-report.json --no-exit-on-warn --no-exit-on-error
      - name: Depcheck
        run: |
          wget https://github.com/jeremylong/DependencyCheck/releases/download/v7.0.0/dependency-check-7.0.0-release.zip
          unzip dependency-check-7.0.0-release.zip
          dependency-check/bin/dependency-check.sh --scan Gemfile.lock --format ALL --project ruby-poc1 --out .
      - name: check files
        run: ls -al 
      - name: update filename in report
        run: sed -i 's/gitaction-test\\\/Gemfile.lock/Gemfile.lock/g' dependency-check-report.json          
      - name: Upload Test results
        uses: actions/upload-artifact@master
        with:
           name: Depcheck-report
           path: |
            dependency-check-report.json 
            dependency-check-report.html  
      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
